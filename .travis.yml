# Configuration file for TravisCI

# We use miniconda for Python so don't need any Python specific tools
language: generic

# Use the container builds so we don't need sudo priviledges
sudo: false

# Only build pushes to the master branch and tags. This avoids the double
# builds than happen when working on a branch instead of a fork.
branches:
    only:
        - master
        # Regex to build tagged commits with version numbers
        - /\d+\.\d+(\.\d+)?(\S*)?$/

# Define environment variables common to all builds
env:
    global:
        # Encrypted variables
        # Github Token for pushing the built HTML (GH_TOKEN)
        #- secure: "JUMBLE OF CHARACTERS"
        # PyPI password for deploying releases (TWINE_PASSWORD)
        #- secure: "JUMBLE OF CHARACTERS"
        #- TWINE_USERNAME=your-user-name
        #
        # These files list the requirements to be installed by conda
        - CONDA_REQUIREMENTS=requirements.txt
        #- CONDA_REQUIREMENTS_DEV=requirements-dev.txt
        # If uploading coverage to codecov
        #- CONDA_INSTALL_EXTRA="codecov"
        #
        # These variables control which actions are performed in a build
        - COVERAGE=false

# Specify the build configurations. Be sure to only deploy from a single build.
matrix:
    include:
        - os: linux
          env:
              - PYTHON=3.7
              - COVERAGE=false
              - BUILD_DOCS=false
              - DEPLOY_DOCS=false
              - DEPLOY_PYPI=false
              # List extra dependencies that need to be installed in this build
              - CONDA_INSTALL_EXTRA="black flake8"

# Setup the build environment
before_install:
    # Get the Fatiando CI scripts (replace "master" with the version you want to use)
    - git clone --branch=master --depth=1 https://github.com/fatiando/continuous-integration.git
    # Download and install miniconda and setup dependencies
    # Need to source the script to set the PATH variable globaly
    #- source continuous-integration/travis/setup-miniconda.sh
    # We'll use the local version but you should use the line above instead
    - source travis/setup-miniconda.sh
    # Show installed pkg information for postmortem diagnostic
    - conda list

# Install the package that we want to test
install:
    # Make a binary wheel for our package and install it
    - python setup.py bdist_wheel
    - pip install dist/*

# Run the actual tests and checks
script:
    # Check code for PEP8 style and code quality
    - make check
    #- make lint
    # Run the test suite
    - if [ "$COVERAGE" == "true" ]; then
          make coverage;
      else
          make test;
      fi

# Don't send out emails every time a build fails
notifications:
    email: false
